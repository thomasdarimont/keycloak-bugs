realm: acme-passwordless
enabled: true
displayName: Acme Passwordless
displayNameHtml: Acme Passwordless
loginWithEmailAllowed: true
internationalizationEnabled: true
supportedLocales: ["en","de"]
defaultLocale: "en"
resetPasswordAllowed: true
loginTheme: "keycloak"
accountTheme: "keycloak.v2"
adminTheme: keycloak
emailTheme: "keycloak"
sslRequired: $(env:SSL_REQUIRED:-EXTERNAL)
browserFlow: "Browser ID 1st Passwordless"

# Bruteforce Protection
bruteForceProtected: true
permanentLockout: false
maxFailureWaitSeconds: 900
minimumQuickLoginWaitSeconds: 60
waitIncrementSeconds: 60
quickLoginCheckMilliSeconds: 1000
maxDeltaTimeSeconds: 43200
failureFactor: 10

eventsListeners:
  - "jboss-logging"

eventsEnabled: true
# 120 days
eventsExpiration: 10368000
# enabledEventTypes: [ "SEND_RESET_PASSWORD", "UPDATE_CONSENT_ERROR", "GRANT_CONSENT", ... ]
adminEventsEnabled: false
adminEventsDetailsEnabled: false
smtpServer:
  replyToDisplayName: "Acme Employee Support"
  port: 1025
  host: mailhog
  replyTo: "no-reply@localhost"
  from: "acme-internal-sso@local"
  fromDisplayName: "Acme Employee Account"

requiredActions:
  - alias: CONFIGURE_RECOVERY_AUTHN_CODES
    name: 'Recovery Authentication Codes'
    providerId: CONFIGURE_RECOVERY_AUTHN_CODES
    enabled: true
    defaultAction: false
    priority: 1500

  - alias: webauthn-register-passwordless
    name: 'Webauthn Register Passwordless'
    providerId: webauthn-register-passwordless
    enabled: true
    defaultAction: false
    priority: 1501

authenticationFlows:
## Identity First Browser Login Flow
  - alias: "Browser ID 1st Passwordless"
    description: "This flow implements the Identity First pattern with Passwordless Auth"
    providerId: basic-flow
    builtIn: false
    topLevel: true
    authenticationExecutions:
      - authenticator: auth-cookie
        requirement: ALTERNATIVE
      - flowAlias: "Identity Forms"
        requirement: ALTERNATIVE
        autheticatorFlow: true

  - alias: "Identity Forms"
    description: "Sub-Flow to ask user for username an password"
    providerId: basic-flow
    topLevel: false
    builtIn: false
    authenticationExecutions:
      - authenticator: auth-username-form
        requirement: REQUIRED
      - flowAlias: "Passwordless or 2FA Forms"
        requirement: REQUIRED
        autheticatorFlow: true

  - alias: "Passwordless or 2FA Forms"
    description: "Sub-Flow to ask user for Passwordless Auth or Password with 2FA"
    providerId: basic-flow
    topLevel: false
    builtIn: false
    authenticationExecutions:
      - authenticator: webauthn-authenticator-passwordless
        requirement: ALTERNATIVE
      - flowAlias: "Password with 2FA"
        requirement: ALTERNATIVE
        autheticatorFlow: true

  - alias: "Password with 2FA"
    description: "Sub-Flow to ask user for 2FA"
    providerId: basic-flow
    topLevel: false
    builtIn: false
    authenticationExecutions:
      - authenticator: auth-password-form
        requirement: REQUIRED
      - flowAlias: "2FA Forms"
        requirement: CONDITIONAL
        autheticatorFlow: true

  - alias: "2FA Forms"
    description: "Sub-Flow to ask user for 2FA"
    providerId: basic-flow
    topLevel: false
    builtIn: false
    authenticationExecutions:
      - authenticator: conditional-user-configured
        requirement: REQUIRED
      - authenticator: webauthn-authenticator
        requirement: ALTERNATIVE
      - authenticator: auth-otp-form
        requirement: ALTERNATIVE
      - authenticator: auth-recovery-authn-code-form
        requirement: ALTERNATIVE

roles:
# Realm specific roles
  realm:
  - name: "acme-user"
    description: "Acme User"

  - name: "acme-user-support"
    description: "Acme Support User"
    composite: true
    composites:
      client:
        "realm-management":
          - query-groups
          - view-users

  - name: "default-roles-acme-internal"
    description: "${role_default-roles}"
    composite: true
    composites:
      realm:
      - "offline_access"
      - "acme-user"
      client:
        "account":
        - "manage-account"
        - "view-profile"

groups:
  - "name": "Users"
    #    "path": "/Users"
    "attributes":
      groupAttribute1: ["groupAttributeValue1"]
    "realmRoles":
      - "acme-user"
    #    "clientRoles": {}
    "subGroups": []

users:
  - username: tester
    email: tester@local
    firstName: Theo
    lastName: Tester
    enabled: true
    attributes:
      locale: ["en"]
      phoneNumber: ["+49178111222333"]
      phoneNumberVerified: ["true"]
    credentials:
      - type: password
        userLabel: initial
        value: test
        temporary: false
    groups:
      - "Users"
